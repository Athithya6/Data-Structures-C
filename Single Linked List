#include <stdio.h>
#include <stdlib.h>
struct Node
{
    int num;
    struct Node* next;
};

void insert_end(struct Node **head,int new_num)
{
	struct Node* new_node= (struct Node*) malloc(sizeof(struct Node));
	struct Node* last=*head;
	new_node->num=new_num;
	new_node->next=NULL;
	
	if(*head==NULL)
	{
		*head=new_node;
		return;
	}
	
	
		while(last->next!=NULL)
		{
			last=last->next;
			
		}
		last->next=new_node;
		return;
	
}

void insert_beg(struct Node **head,int new_num)
{
	struct Node* new_node = (struct Node*) malloc(sizeof(struct Node));
	new_node->num=new_num;
	new_node->next=*head;
	*head=new_node;
	return;
}

void insert_pos(struct Node **head,int new_num,int pos)
{
	struct Node* new_node = (struct Node*) malloc(sizeof(struct Node));
	struct Node* temp = (struct Node*) malloc(sizeof(struct Node));
	temp=*head;
	while(--pos)
	{
		temp=temp->next;
	}
	new_node->num=new_num;
	new_node->next=temp->next;
	temp->next=new_node;
	return;
}
	
void print(struct Node* node)
{
	while(node!=NULL)
	{
		printf("%d",node->num);
		node=node->next;
	}
	return;
	
}

void delete_num(struct Node **head,int new_num)
{
	struct Node* temp= (struct Node*) malloc(sizeof(struct Node));
	struct Node* temp1= (struct Node*) malloc(sizeof(struct Node));
	temp=*head;
	temp1=*head;
	while(temp1->num!=new_num)
	{
		temp=temp1;
		temp1=temp1->next;
	}
	temp->next=temp1->next;
	temp1->next=NULL;
	free(temp1);
	return;
}

void delete_pos(struct Node **head,int pos)
{
	struct Node *temp = (struct Node*) malloc(sizeof(struct Node));
	struct Node *temp1 = (struct Node*) malloc(sizeof(struct Node));
	temp=*head;
	temp1=*head;
	if(pos==1)
	{
		temp=temp->next;
		*head=temp;
		free(temp);
	}
	else
	{
		while(--pos)
		{
			temp1=temp;
			temp=temp->next;
		}
		temp1->next=temp->next;
		temp->next=NULL;
		free(temp);
	}
	return;
 	}	


void print_rec(struct Node *node)
{
	if(node==NULL)
	{
		return;
	}
	else
	{
		printf("%d",node->num);
		node=node->next;
		print_rec(node);
	}
	return;
}

int main()
{
    struct Node* head = NULL;
    int new_num,pos,choice;
    
    while(1)
    {
    printf("Choose amongst the following options:\n1.Insert at the beginning \n2.Insert at the end \n3.Insert at position \n4.Delete at a position"
	        "\n5.Delete a number \n6.Print \n7.Print using recursion \n8.EXIT");
    scanf("%d",&choice);
    
    
        switch(choice)
        {
            case 1:
            	printf("Enter a number to insert at the beginning:\n");
                scanf("%d",&new_num);
                insert_beg(&head,new_num);
                break;
            
            case 2:
            	printf("Enter a number to insert at the end:\n");
                scanf("%d",&new_num);
                insert_end(&head,new_num);
                break;
            
            case 3:
            	printf("Enter a number and at which position to enter:\n");
                scanf("%d%d",&new_num,&pos);
                insert_pos(&head,new_num,pos);
                break;
            
            case 4:
            	printf("Enter a position to delete:\n");
            	scanf("%d",&pos);
            	delete_pos(&head,pos);
            	break;
            	
            case 5:
            	printf("Enter a number to delete:\n");
            	scanf("%d",&new_num);
            	delete_num(&head,new_num);
            	break;
            	
            case 6:
            	printf("OUTPUT:\n");
            	print(head);
            	printf("\n");
            	break;
            	
            case 7:
            	printf("OUTPUT IN RECURSION:\n");
            	print_rec(head);
            	printf("\n");
            	break;
            	
            case 8:
            	exit(0);
    }
    }
    return 0;
}
